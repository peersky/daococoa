{
  "address": "0x9Be0972aCeb5313f1fA0Fe81e8cb2884936F3e24",
  "abi": [
    {
      "inputs": [],
      "name": "currentChainId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "inspectEIP712Hashes",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "_CACHED_DOMAIN_SEPARATOR",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_CACHED_CHAIN_ID",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_CACHED_THIS",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_HASHED_NAME",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_HASHED_VERSION",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_TYPE_HASH",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x5568ab3849f6d1daa5af3921cc7e206d1a492a8f0235211e008ed905d7559cd7",
  "receipt": {
    "to": "0x4e59b44847b379578588920cA78FbF26c0B4956C",
    "from": "0xCA618ea6Adb914B694E2acF1d77fe92894fbfA30",
    "contractAddress": null,
    "transactionIndex": 2,
    "gasUsed": "141962",
    "logsBloom": "0x
    "blockHash": "0xbc270e2981a43897efc685c9f89a518a3c2cde35c431645610941da88eac2f49",
    "transactionHash": "0x5568ab3849f6d1daa5af3921cc7e206d1a492a8f0235211e008ed905d7559cd7",
    "logs": [
      {
        "transactionIndex": 2,
        "blockNumber": 32703252,
        "transactionHash": "0x5568ab3849f6d1daa5af3921cc7e206d1a492a8f0235211e008ed905d7559cd7",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000ca618ea6adb914b694e2acf1d77fe92894fbfa30",
          "0x000000000000000000000000c26880a0af2ea0c7e8130e6ec47af756465452e8"
        ],
        "data": "0x00000000000000000000000000000000000000000000000000012fb529dac5a00000000000000000000000000000000000000000000000003814e40cfb65bbe8000000000000000000000000000000000000000000001bf001537872452d692c0000000000000000000000000000000000000000000000003813b457d18af648000000000000000000000000000000000000000000001bf00154a8276f082ecc",
        "logIndex": 6,
        "blockHash": "0xbc270e2981a43897efc685c9f89a518a3c2cde35c431645610941da88eac2f49"
      }
    ],
    "blockNumber": 32703252,
    "cumulativeGasUsed": "1224263",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "a78886197d926f03553d25578280cc88",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"currentChainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"inspectEIP712Hashes\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"_CACHED_DOMAIN_SEPARATOR\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_CACHED_CHAIN_ID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_CACHED_THIS\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_HASHED_NAME\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_HASHED_VERSION\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_TYPE_HASH\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/facets/EIP712InspectorFacet.sol\":\"EIP712InspectorFacet\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"contracts/facets/EIP712InspectorFacet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\nimport \\\"../libraries/LibEIP712Storage.sol\\\";\\n\\ncontract EIP712InspectorFacet {\\n    function inspectEIP712Hashes()\\n        public\\n        view\\n        returns (\\n            bytes32 _CACHED_DOMAIN_SEPARATOR,\\n            uint256 _CACHED_CHAIN_ID,\\n            address _CACHED_THIS,\\n            bytes32 _HASHED_NAME,\\n            bytes32 _HASHED_VERSION,\\n            bytes32 _TYPE_HASH\\n        )\\n    {\\n        LibEIP712WithStorage.LibEIP712WithStorageStorage storage ss = LibEIP712WithStorage.EIP712WithStorage();\\n\\n        return (\\n            ss._CACHED_DOMAIN_SEPARATOR,\\n            ss._CACHED_CHAIN_ID,\\n            ss._CACHED_THIS,\\n            ss._HASHED_NAME,\\n            ss._HASHED_VERSION,\\n            ss._TYPE_HASH\\n        );\\n    }\\n\\n    function currentChainId() public view returns (uint256) {\\n        return block.chainid;\\n    }\\n}\\n\",\"keccak256\":\"0xc2b8d56a530cdfa5955a6e00ef427f718cb4dea77b161bd17b89a2b886163965\",\"license\":\"MIT\"},\"contracts/libraries/LibEIP712Storage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.4;\\n\\nimport {IDiamondCut} from \\\"../vendor/interfaces/IDiamondCut.sol\\\";\\n\\nlibrary LibEIP712WithStorage {\\n    bytes32 constant EIP712_STORAGE_POSITION = keccak256(\\\"EIP.712.STORAGE.POSITION\\\");\\n\\n    struct LibEIP712WithStorageStorage {\\n        bytes32 _CACHED_DOMAIN_SEPARATOR;\\n        uint256 _CACHED_CHAIN_ID;\\n        address _CACHED_THIS;\\n        bytes32 _HASHED_NAME;\\n        bytes32 _HASHED_VERSION;\\n        bytes32 _TYPE_HASH;\\n    }\\n\\n    function EIP712WithStorage() internal pure returns (LibEIP712WithStorageStorage storage ds) {\\n        bytes32 position = EIP712_STORAGE_POSITION;\\n        assembly {\\n            ds.slot := position\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x8d08027d4c760ac917c5d1a5e25d9d957164aa5b22ddf0e30a0c15bdde1d6e83\",\"license\":\"MIT\"},\"contracts/vendor/interfaces/IDiamondCut.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n/******************************************************************************\\\\\\n*  Adapted from\\n*  Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\n* EIP-2535 Diamond Standard: https://eips.ethereum.org/EIPS/eip-2535\\n/******************************************************************************/\\n\\ninterface IDiamondCut {\\n    enum FacetCutAction {Add, Replace, Remove}\\n    // Add=0, Replace=1, Remove=2\\n\\n    struct FacetCut {\\n        address facetAddress;\\n        FacetCutAction action;\\n        bytes4[] functionSelectors;\\n    }\\n\\n    /// @notice Add/replace/remove any number of functions and optionally execute\\n    ///         a function with delegatecall\\n    /// @param _diamondCut Contains the facet addresses and function selectors\\n    /// @param _init The address of the contract or facet to execute _calldata\\n    /// @param _calldata A function call, including function selector and arguments\\n    ///                  _calldata is executed with delegatecall on _init\\n    function diamondCut(\\n        FacetCut[] calldata _diamondCut,\\n        address _init,\\n        bytes calldata _calldata\\n    ) external;\\n\\n    event DiamondCut(FacetCut[] _diamondCut, address _init, bytes _calldata);\\n}\",\"keccak256\":\"0xe41756e525c48df72d25ed448b9c9a7d09d924ab6205641e87845542296f25ed\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080604052348015600f57600080fd5b506101988061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80636cbadbfa1461003b578063d3a8018d1461004e575b600080fd5b6040514681526020015b60405180910390f35b7fe5b6a7afa77789577f2802f0da58895f660e5798c5c11b2ea18b0a53bd65d3a7547fe5b6a7afa77789577f2802f0da58895f660e5798c5c11b2ea18b0a53bd65d3a8547fe5b6a7afa77789577f2802f0da58895f660e5798c5c11b2ea18b0a53bd65d3a9547fe5b6a7afa77789577f2802f0da58895f660e5798c5c11b2ea18b0a53bd65d3aa547fe5b6a7afa77789577f2802f0da58895f660e5798c5c11b2ea18b0a53bd65d3ab547fe5b6a7afa77789577f2802f0da58895f660e5798c5c11b2ea18b0a53bd65d3ac5460408051968752602087019590955273ffffffffffffffffffffffffffffffffffffffff909316938501939093526060840152608083019190915260a082015260c00161004556fea2646970667358221220d5a4446ce09aebef62b81cbceb6501c28a9788c304f07c3d848e26a1dd2aec4e64736f6c63430008080033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c80636cbadbfa1461003b578063d3a8018d1461004e575b600080fd5b6040514681526020015b60405180910390f35b7fe5b6a7afa77789577f2802f0da58895f660e5798c5c11b2ea18b0a53bd65d3a7547fe5b6a7afa77789577f2802f0da58895f660e5798c5c11b2ea18b0a53bd65d3a8547fe5b6a7afa77789577f2802f0da58895f660e5798c5c11b2ea18b0a53bd65d3a9547fe5b6a7afa77789577f2802f0da58895f660e5798c5c11b2ea18b0a53bd65d3aa547fe5b6a7afa77789577f2802f0da58895f660e5798c5c11b2ea18b0a53bd65d3ab547fe5b6a7afa77789577f2802f0da58895f660e5798c5c11b2ea18b0a53bd65d3ac5460408051968752602087019590955273ffffffffffffffffffffffffffffffffffffffff909316938501939093526060840152608083019190915260a082015260c00161004556fea2646970667358221220d5a4446ce09aebef62b81cbceb6501c28a9788c304f07c3d848e26a1dd2aec4e64736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}